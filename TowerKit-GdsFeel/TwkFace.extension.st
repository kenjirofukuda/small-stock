Extension { #name : #TwkFace }

{ #category : #'*TowerKit-GdsFeel' }
TwkFace >> autoGeneratedStructureName [
	^ (Array with: self parent name with: self directionString with: 'AG') joinUsing: '_' 
]

{ #category : #'*TowerKit-GdsFeel' }
TwkFace >> gdsBuilder [
	^ self valueOfProperty: #gdsBuilder ifAbsentPut: [ TwkFaceGdsBuilder new model: self ] 	
]

{ #category : #'*TowerKit-GdsFeel' }
TwkFace >> minusSlopeSegments [
	| segs |
	segs := self brickStack leftSlopeSegments.
	self isHorizontalStack
		ifTrue: [ ^ segs collect: [ :seg | seg rightRotatedInModel ] ].
	^ segs
]

{ #category : #'*TowerKit-GdsFeel' }
TwkFace >> planeMemberSegments [
	| segs |
	segs := Array
		streamContents:
			[ :s | self brickStack planeSpans do: [ :each | s nextPutAll: each memberSegments ] ].
	self isHorizontalStack
		ifTrue: [ segs := segs collect: [ :each | each rightRotatedInModel ] ].
	^ segs
]

{ #category : #'*TowerKit-GdsFeel' }
TwkFace >> plusSlopeSegments [
	| segs |
	segs := self brickStack rightSlopeSegments.
	self isHorizontalStack
		ifTrue: [ ^ segs collect: [ :seg | seg rightRotatedInModel ] ].
	^ segs
]

{ #category : #'*TowerKit-GdsFeel' }
TwkFace >> spanCrossSegments [
	^ self spanSegmentsForSelector: #crossSegments
]

{ #category : #'*TowerKit-GdsFeel' }
TwkFace >> spanSegmentsForSelector: aGetSegmentsSelector [
	| segs |
	segs := Array
		streamContents: [ :s | 
			| spans |
			spans := self brickStack depthSpans.
			self isHorizontalStack
				ifFalse: [ spans := spans reversed ].
			spans do: [ :each | s nextPutAll: (each perform: aGetSegmentsSelector) ] ].
	self isHorizontalStack
		ifTrue: [ segs := segs collect: [ :each | each rightRotatedInModel ] ].
	^ segs roundedForStan
]

{ #category : #'*TowerKit-GdsFeel' }
TwkFace >> splitedSpanCrossSegments [
	^ self spanSegmentsForSelector: #splitedCrossSegments
]

{ #category : #'*TowerKit-GdsFeel' }
TwkFace >> structureName [
	^ (Array with: self parent name with: self directionString) joinUsing: '_' 
]
